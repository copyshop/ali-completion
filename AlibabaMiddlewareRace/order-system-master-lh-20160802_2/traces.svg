<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="434" onload="init(evt)" viewBox="0 0 1200 434" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) { 
		details = document.getElementById("details").firstChild; 
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
		
		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}
		
		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;
		
		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) { 
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}
		
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) { 
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;
		
		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;
		
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";
		
		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";
		
		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}	

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="434.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="417" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="417" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readInt (52 samples, 0.02%)</title><rect x="103.4" y="193" width="0.3" height="15.0" fill="rgb(229,165,30)" rx="2" ry="2" />
<text text-anchor="" x="106.40" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.Encoder.writeFixed (1,757 samples, 0.83%)</title><rect x="295.5" y="241" width="9.8" height="15.0" fill="rgb(238,196,33)" rx="2" ry="2" />
<text text-anchor="" x="298.52" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeCollapse (62 samples, 0.03%)</title><rect x="100.8" y="273" width="0.4" height="15.0" fill="rgb(209,35,54)" rx="2" ry="2" />
<text text-anchor="" x="103.82" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (372 samples, 0.17%)</title><rect x="259.5" y="65" width="2.1" height="15.0" fill="rgb(230,141,26)" rx="2" ry="2" />
<text text-anchor="" x="262.55" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Collections.sort (11,201 samples, 5.26%)</title><rect x="326.4" y="241" width="62.1" height="15.0" fill="rgb(242,72,16)" rx="2" ry="2" />
<text text-anchor="" x="329.38" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (20 samples, 0.01%)</title><rect x="200.8" y="65" width="0.1" height="15.0" fill="rgb(208,144,0)" rx="2" ry="2" />
<text text-anchor="" x="203.80" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.io.MyFileInputStream.read (3,455 samples, 1.62%)</title><rect x="1147.0" y="129" width="19.2" height="15.0" fill="rgb(219,94,53)" rx="2" ry="2" />
<text text-anchor="" x="1150.03" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.getNode (107 samples, 0.05%)</title><rect x="1189.2" y="225" width="0.6" height="15.0" fill="rgb(242,49,16)" rx="2" ry="2" />
<text text-anchor="" x="1192.18" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (117 samples, 0.05%)</title><rect x="165.4" y="225" width="0.7" height="15.0" fill="rgb(221,25,42)" rx="2" ry="2" />
<text text-anchor="" x="168.43" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Encoder.encode (4,765 samples, 2.24%)</title><rect x="527.2" y="177" width="26.4" height="15.0" fill="rgb(205,88,34)" rx="2" ry="2" />
<text text-anchor="" x="530.21" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.SplitSampler$MySplitReader.nextLine (989 samples, 0.46%)</title><rect x="111.0" y="225" width="5.5" height="15.0" fill="rgb(252,76,37)" rx="2" ry="2" />
<text text-anchor="" x="113.99" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (480 samples, 0.23%)</title><rect x="266.9" y="97" width="2.6" height="15.0" fill="rgb(235,86,38)" rx="2" ry="2" />
<text text-anchor="" x="269.85" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeForceCollapse (21 samples, 0.01%)</title><rect x="101.2" y="273" width="0.1" height="15.0" fill="rgb(250,222,34)" rx="2" ry="2" />
<text text-anchor="" x="104.17" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringEncoder.encode (104 samples, 0.05%)</title><rect x="109.6" y="145" width="0.5" height="15.0" fill="rgb(239,150,54)" rx="2" ry="2" />
<text text-anchor="" x="112.56" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.Executors$RunnableAdapter.call (214 samples, 0.10%)</title><rect x="10.7" y="289" width="1.2" height="15.0" fill="rgb(236,114,37)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readInt (95 samples, 0.04%)</title><rect x="321.0" y="225" width="0.5" height="15.0" fill="rgb(240,68,52)" rx="2" ry="2" />
<text text-anchor="" x="323.95" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (134 samples, 0.06%)</title><rect x="10.0" y="305" width="0.7" height="15.0" fill="rgb(246,166,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Collections.sort (15,653 samples, 7.36%)</title><rect x="182.7" y="241" width="86.8" height="15.0" fill="rgb(229,94,0)" rx="2" ry="2" />
<text text-anchor="" x="185.71" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (214 samples, 0.10%)</title><rect x="10.7" y="337" width="1.2" height="15.0" fill="rgb(251,175,13)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryData.encodeInt (1,032 samples, 0.48%)</title><rect x="289.4" y="225" width="5.7" height="15.0" fill="rgb(207,74,12)" rx="2" ry="2" />
<text text-anchor="" x="292.38" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedOutputStream.flushBuffer (67 samples, 0.03%)</title><rect x="101.4" y="273" width="0.4" height="15.0" fill="rgb(209,84,13)" rx="2" ry="2" />
<text text-anchor="" x="104.39" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.(init) (80 samples, 0.04%)</title><rect x="102.6" y="225" width="0.5" height="15.0" fill="rgb(216,122,15)" rx="2" ry="2" />
<text text-anchor="" x="105.61" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.group0 (26 samples, 0.01%)</title><rect x="102.3" y="113" width="0.2" height="15.0" fill="rgb(217,194,44)" rx="2" ry="2" />
<text text-anchor="" x="105.34" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.alibaba.middleware.race.OrderSystemAgency.construct (442 samples, 0.21%)</title><rect x="100.6" y="353" width="2.5" height="15.0" fill="rgb(237,19,1)" rx="2" ry="2" />
<text text-anchor="" x="103.63" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryData.encodeInt (3,203 samples, 1.51%)</title><rect x="471.6" y="209" width="17.7" height="15.0" fill="rgb(215,175,3)" rx="2" ry="2" />
<text text-anchor="" x="474.57" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (2,923 samples, 1.37%)</title><rect x="147.9" y="161" width="16.2" height="15.0" fill="rgb(225,1,3)" rx="2" ry="2" />
<text text-anchor="" x="150.89" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.ensureBounds (344 samples, 0.16%)</title><rect x="145.7" y="225" width="1.9" height="15.0" fill="rgb(219,65,7)" rx="2" ry="2" />
<text text-anchor="" x="148.74" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.compile (80 samples, 0.04%)</title><rect x="102.6" y="209" width="0.5" height="15.0" fill="rgb(232,145,24)" rx="2" ry="2" />
<text text-anchor="" x="105.61" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.Executors$RunnableAdapter.call (134 samples, 0.06%)</title><rect x="10.0" y="289" width="0.7" height="15.0" fill="rgb(206,213,17)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8.updatePositions (2,225 samples, 1.05%)</title><rect x="1131.2" y="65" width="12.3" height="15.0" fill="rgb(235,144,3)" rx="2" ry="2" />
<text text-anchor="" x="1134.20" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.decode (1,159 samples, 0.54%)</title><rect x="314.5" y="209" width="6.4" height="15.0" fill="rgb(248,35,39)" rx="2" ry="2" />
<text text-anchor="" x="317.50" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.readLine (952 samples, 0.45%)</title><rect x="111.2" y="193" width="5.3" height="15.0" fill="rgb(222,43,20)" rx="2" ry="2" />
<text text-anchor="" x="114.19" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (213 samples, 0.10%)</title><rect x="250.9" y="81" width="1.2" height="15.0" fill="rgb(239,23,34)" rx="2" ry="2" />
<text text-anchor="" x="253.87" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Indexing$1.call (1,395 samples, 0.66%)</title><rect x="103.1" y="273" width="7.8" height="15.0" fill="rgb(249,37,12)" rx="2" ry="2" />
<text text-anchor="" x="106.15" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (539 samples, 0.25%)</title><rect x="256.3" y="81" width="2.9" height="15.0" fill="rgb(253,140,3)" rx="2" ry="2" />
<text text-anchor="" x="259.26" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging.access$0 (11,651 samples, 5.48%)</title><rect x="583.5" y="241" width="64.6" height="15.0" fill="rgb(210,69,6)" rx="2" ry="2" />
<text text-anchor="" x="586.53" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringEncoder.encode (19 samples, 0.01%)</title><rect x="144.5" y="193" width="0.1" height="15.0" fill="rgb(226,147,24)" rx="2" ry="2" />
<text text-anchor="" x="147.49" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flush (54 samples, 0.03%)</title><rect x="144.6" y="241" width="0.3" height="15.0" fill="rgb(237,4,40)" rx="2" ry="2" />
<text text-anchor="" x="147.59" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeInt (34 samples, 0.02%)</title><rect x="144.3" y="225" width="0.2" height="15.0" fill="rgb(229,74,4)" rx="2" ry="2" />
<text text-anchor="" x="147.27" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.getType (826 samples, 0.39%)</title><rect x="321.6" y="241" width="4.6" height="15.0" fill="rgb(238,83,27)" rx="2" ry="2" />
<text text-anchor="" x="324.61" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (54 samples, 0.03%)</title><rect x="144.6" y="193" width="0.3" height="15.0" fill="rgb(228,153,11)" rx="2" ry="2" />
<text text-anchor="" x="147.59" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.implRead (57,113 samples, 26.84%)</title><rect x="849.7" y="161" width="316.7" height="15.0" fill="rgb(243,114,20)" rx="2" ry="2" />
<text text-anchor="" x="852.71" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.cs.StreamDecoder.implRead</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (20 samples, 0.01%)</title><rect x="200.8" y="81" width="0.1" height="15.0" fill="rgb(228,73,43)" rx="2" ry="2" />
<text text-anchor="" x="203.80" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.sequence (45 samples, 0.02%)</title><rect x="102.8" y="177" width="0.3" height="15.0" fill="rgb(235,211,53)" rx="2" ry="2" />
<text text-anchor="" x="105.81" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decodeLoop (52,860 samples, 24.84%)</title><rect x="850.4" y="129" width="293.1" height="15.0" fill="rgb(211,43,1)" rx="2" ry="2" />
<text text-anchor="" x="853.41" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.cs.UTF_8$Decoder.decodeLoop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (75 samples, 0.04%)</title><rect x="295.1" y="177" width="0.4" height="15.0" fill="rgb(229,9,45)" rx="2" ry="2" />
<text text-anchor="" x="298.11" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging$2.call (214 samples, 0.10%)</title><rect x="10.7" y="257" width="1.2" height="15.0" fill="rgb(252,35,49)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (83 samples, 0.04%)</title><rect x="218.9" y="65" width="0.5" height="15.0" fill="rgb(236,168,49)" rx="2" ry="2" />
<text text-anchor="" x="221.92" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flush (5,311 samples, 2.50%)</title><rect x="553.7" y="241" width="29.5" height="15.0" fill="rgb(223,169,54)" rx="2" ry="2" />
<text text-anchor="" x="556.72" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >av..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (69 samples, 0.03%)</title><rect x="116.1" y="97" width="0.4" height="15.0" fill="rgb(248,186,19)" rx="2" ry="2" />
<text text-anchor="" x="119.09" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.Encoder.writeFixed (2,967 samples, 1.39%)</title><rect x="147.6" y="241" width="16.5" height="15.0" fill="rgb(248,180,30)" rx="2" ry="2" />
<text text-anchor="" x="150.65" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readString (1,229 samples, 0.58%)</title><rect x="314.1" y="241" width="6.8" height="15.0" fill="rgb(222,174,31)" rx="2" ry="2" />
<text text-anchor="" x="317.11" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopLeft (236 samples, 0.11%)</title><rect x="250.7" y="113" width="1.4" height="15.0" fill="rgb(221,127,23)" rx="2" ry="2" />
<text text-anchor="" x="253.74" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.group0 (77 samples, 0.04%)</title><rect x="102.1" y="161" width="0.4" height="15.0" fill="rgb(226,137,54)" rx="2" ry="2" />
<text text-anchor="" x="105.06" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeAt (6,356 samples, 2.99%)</title><rect x="339.0" y="161" width="35.2" height="15.0" fill="rgb(206,219,15)" rx="2" ry="2" />
<text text-anchor="" x="341.96" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (27 samples, 0.01%)</title><rect x="200.8" y="113" width="0.1" height="15.0" fill="rgb(233,18,50)" rx="2" ry="2" />
<text text-anchor="" x="203.80" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.expr (73 samples, 0.03%)</title><rect x="102.1" y="145" width="0.4" height="15.0" fill="rgb(205,187,29)" rx="2" ry="2" />
<text text-anchor="" x="105.08" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.SplitSampler.doSample (1,049 samples, 0.49%)</title><rect x="110.9" y="241" width="5.8" height="15.0" fill="rgb(249,17,52)" rx="2" ry="2" />
<text text-anchor="" x="113.89" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (25 samples, 0.01%)</title><rect x="289.2" y="193" width="0.2" height="15.0" fill="rgb(211,81,46)" rx="2" ry="2" />
<text text-anchor="" x="292.24" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decodeArrayLoop (862 samples, 0.41%)</title><rect x="111.3" y="81" width="4.8" height="15.0" fill="rgb(212,147,50)" rx="2" ry="2" />
<text text-anchor="" x="114.27" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (54 samples, 0.03%)</title><rect x="144.6" y="225" width="0.3" height="15.0" fill="rgb(215,172,45)" rx="2" ry="2" />
<text text-anchor="" x="147.59" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.fill (57,113 samples, 26.84%)</title><rect x="849.7" y="209" width="316.7" height="15.0" fill="rgb(210,229,40)" rx="2" ry="2" />
<text text-anchor="" x="852.71" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.BufferedReader.fill</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decodeArrayLoop (52,574 samples, 24.71%)</title><rect x="852.0" y="113" width="291.5" height="15.0" fill="rgb(222,161,17)" rx="2" ry="2" />
<text text-anchor="" x="855.00" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.cs.UTF_8$Decoder.decodeArrayLoop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (112 samples, 0.05%)</title><rect x="250.9" y="49" width="0.6" height="15.0" fill="rgb(225,67,45)" rx="2" ry="2" />
<text text-anchor="" x="253.88" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.compareTo (481 samples, 0.23%)</title><rect x="261.6" y="65" width="2.7" height="15.0" fill="rgb(246,118,22)" rx="2" ry="2" />
<text text-anchor="" x="264.61" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.getType (5,015 samples, 2.36%)</title><rect x="649.7" y="241" width="27.8" height="15.0" fill="rgb(222,191,25)" rx="2" ry="2" />
<text text-anchor="" x="652.72" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >h..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.run (134 samples, 0.06%)</title><rect x="10.0" y="353" width="0.7" height="15.0" fill="rgb(226,84,7)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.getNode (243 samples, 0.11%)</title><rect x="648.3" y="209" width="1.4" height="15.0" fill="rgb(210,58,46)" rx="2" ry="2" />
<text text-anchor="" x="651.30" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.compareTo (133 samples, 0.06%)</title><rect x="217.5" y="65" width="0.8" height="15.0" fill="rgb(228,118,47)" rx="2" ry="2" />
<text text-anchor="" x="220.51" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.indexOf (41 samples, 0.02%)</title><rect x="1187.6" y="241" width="0.2" height="15.0" fill="rgb(228,135,24)" rx="2" ry="2" />
<text text-anchor="" x="1190.58" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeLong (359 samples, 0.17%)</title><rect x="145.7" y="241" width="1.9" height="15.0" fill="rgb(210,115,21)" rx="2" ry="2" />
<text text-anchor="" x="148.66" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeIntWithReturn (1,107 samples, 0.52%)</title><rect x="289.4" y="241" width="6.1" height="15.0" fill="rgb(227,87,11)" rx="2" ry="2" />
<text text-anchor="" x="292.38" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (98 samples, 0.05%)</title><rect x="218.8" y="81" width="0.6" height="15.0" fill="rgb(212,202,37)" rx="2" ry="2" />
<text text-anchor="" x="221.84" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringEncoder.encode (11,561 samples, 5.43%)</title><rect x="489.5" y="193" width="64.1" height="15.0" fill="rgb(207,88,37)" rx="2" ry="2" />
<text text-anchor="" x="492.53" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.la..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.xflow (35 samples, 0.02%)</title><rect x="115.9" y="65" width="0.2" height="15.0" fill="rgb(210,111,49)" rx="2" ry="2" />
<text text-anchor="" x="118.86" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.readLine (989 samples, 0.46%)</title><rect x="111.0" y="209" width="5.5" height="15.0" fill="rgb(232,122,21)" rx="2" ry="2" />
<text text-anchor="" x="113.99" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.sequence (23 samples, 0.01%)</title><rect x="102.4" y="81" width="0.1" height="15.0" fill="rgb(212,185,36)" rx="2" ry="2" />
<text text-anchor="" x="105.36" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.run (214 samples, 0.10%)</title><rect x="10.7" y="353" width="1.2" height="15.0" fill="rgb(213,142,5)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.countRunAndMakeAscending (210 samples, 0.10%)</title><rect x="199.3" y="161" width="1.2" height="15.0" fill="rgb(254,196,5)" rx="2" ry="2" />
<text text-anchor="" x="202.35" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.getType (446 samples, 0.21%)</title><rect x="179.7" y="241" width="2.5" height="15.0" fill="rgb(240,102,13)" rx="2" ry="2" />
<text text-anchor="" x="182.68" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.isAllLong (104 samples, 0.05%)</title><rect x="102.5" y="305" width="0.6" height="15.0" fill="rgb(209,210,24)" rx="2" ry="2" />
<text text-anchor="" x="105.49" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (75 samples, 0.04%)</title><rect x="295.1" y="161" width="0.4" height="15.0" fill="rgb(253,171,32)" rx="2" ry="2" />
<text text-anchor="" x="298.11" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.isLong (100 samples, 0.05%)</title><rect x="102.5" y="289" width="0.6" height="15.0" fill="rgb(205,35,52)" rx="2" ry="2" />
<text text-anchor="" x="105.51" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (67 samples, 0.03%)</title><rect x="101.4" y="241" width="0.4" height="15.0" fill="rgb(226,162,52)" rx="2" ry="2" />
<text text-anchor="" x="104.39" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (480 samples, 0.23%)</title><rect x="266.9" y="81" width="2.6" height="15.0" fill="rgb(231,169,16)" rx="2" ry="2" />
<text text-anchor="" x="269.85" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging$2.call (144,525 samples, 67.92%)</title><rect x="388.5" y="257" width="801.4" height="15.0" fill="rgb(213,120,46)" rx="2" ry="2" />
<text text-anchor="" x="391.50" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.batch.Tagging$2.call</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.countRunAndMakeAscending (139 samples, 0.07%)</title><rect x="338.1" y="177" width="0.8" height="15.0" fill="rgb(245,108,35)" rx="2" ry="2" />
<text text-anchor="" x="341.14" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sorting$4.call (134 samples, 0.06%)</title><rect x="10.0" y="241" width="0.7" height="15.0" fill="rgb(213,221,6)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (15,993 samples, 7.52%)</title><rect x="11.9" y="273" width="88.7" height="15.0" fill="rgb(228,85,10)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (159 samples, 0.07%)</title><rect x="146.8" y="209" width="0.8" height="15.0" fill="rgb(246,5,38)" rx="2" ry="2" />
<text text-anchor="" x="149.77" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (15,993 samples, 7.52%)</title><rect x="11.9" y="337" width="88.7" height="15.0" fill="rgb(232,174,46)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopLeft (907 samples, 0.43%)</title><rect x="259.2" y="113" width="5.1" height="15.0" fill="rgb(211,30,25)" rx="2" ry="2" />
<text text-anchor="" x="262.25" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.startsWith (33 samples, 0.02%)</title><rect x="1187.8" y="241" width="0.2" height="15.0" fill="rgb(249,211,36)" rx="2" ry="2" />
<text text-anchor="" x="1190.80" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.inReady (620 samples, 0.29%)</title><rect x="1143.5" y="145" width="3.5" height="15.0" fill="rgb(229,11,19)" rx="2" ry="2" />
<text text-anchor="" x="1146.54" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (25 samples, 0.01%)</title><rect x="289.2" y="209" width="0.2" height="15.0" fill="rgb(211,227,52)" rx="2" ry="2" />
<text text-anchor="" x="292.24" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (159 samples, 0.07%)</title><rect x="146.8" y="161" width="0.8" height="15.0" fill="rgb(236,98,23)" rx="2" ry="2" />
<text text-anchor="" x="149.77" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeFixed (1,757 samples, 0.83%)</title><rect x="295.5" y="225" width="9.8" height="15.0" fill="rgb(244,174,53)" rx="2" ry="2" />
<text text-anchor="" x="298.52" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (1,757 samples, 0.83%)</title><rect x="295.5" y="193" width="9.8" height="15.0" fill="rgb(228,120,6)" rx="2" ry="2" />
<text text-anchor="" x="298.52" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Indexing$1.call (1,395 samples, 0.66%)</title><rect x="103.1" y="257" width="7.8" height="15.0" fill="rgb(252,83,21)" rx="2" ry="2" />
<text text-anchor="" x="106.15" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (1,756 samples, 0.83%)</title><rect x="295.5" y="145" width="9.8" height="15.0" fill="rgb(251,181,16)" rx="2" ry="2" />
<text text-anchor="" x="298.53" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.run (15,993 samples, 7.52%)</title><rect x="11.9" y="353" width="88.7" height="15.0" fill="rgb(230,110,42)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (67 samples, 0.03%)</title><rect x="314.1" y="193" width="0.4" height="15.0" fill="rgb(237,159,40)" rx="2" ry="2" />
<text text-anchor="" x="317.13" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decode (45 samples, 0.02%)</title><rect x="103.9" y="161" width="0.2" height="15.0" fill="rgb(207,225,47)" rx="2" ry="2" />
<text text-anchor="" x="106.85" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>40090 (15,993 samples, 7.52%)</title><rect x="11.9" y="369" width="88.7" height="15.0" fill="rgb(222,21,42)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >40090</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.sequence (69 samples, 0.03%)</title><rect x="102.1" y="129" width="0.4" height="15.0" fill="rgb(228,35,36)" rx="2" ry="2" />
<text text-anchor="" x="105.10" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (210 samples, 0.10%)</title><rect x="217.1" y="81" width="1.2" height="15.0" fill="rgb(214,191,30)" rx="2" ry="2" />
<text text-anchor="" x="220.09" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flush (25 samples, 0.01%)</title><rect x="289.2" y="241" width="0.2" height="15.0" fill="rgb(235,139,8)" rx="2" ry="2" />
<text text-anchor="" x="292.24" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryEncoder.writeString (127 samples, 0.06%)</title><rect x="109.4" y="193" width="0.7" height="15.0" fill="rgb(211,121,25)" rx="2" ry="2" />
<text text-anchor="" x="112.43" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopRight (251 samples, 0.12%)</title><rect x="252.1" y="113" width="1.3" height="15.0" fill="rgb(240,171,33)" rx="2" ry="2" />
<text text-anchor="" x="255.05" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (2,529 samples, 1.19%)</title><rect x="236.7" y="113" width="14.0" height="15.0" fill="rgb(217,57,11)" rx="2" ry="2" />
<text text-anchor="" x="239.72" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sampling$1.call (1,051 samples, 0.49%)</title><rect x="110.9" y="257" width="5.8" height="15.0" fill="rgb(205,110,30)" rx="2" ry="2" />
<text text-anchor="" x="113.88" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (125 samples, 0.06%)</title><rect x="305.3" y="193" width="0.7" height="15.0" fill="rgb(224,189,7)" rx="2" ry="2" />
<text text-anchor="" x="308.34" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (129 samples, 0.06%)</title><rect x="252.7" y="81" width="0.7" height="15.0" fill="rgb(235,186,50)" rx="2" ry="2" />
<text text-anchor="" x="255.73" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.expr (80 samples, 0.04%)</title><rect x="102.0" y="193" width="0.5" height="15.0" fill="rgb(240,222,8)" rx="2" ry="2" />
<text text-anchor="" x="105.04" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.sort (15,635 samples, 7.35%)</title><rect x="182.8" y="177" width="86.7" height="15.0" fill="rgb(240,119,5)" rx="2" ry="2" />
<text text-anchor="" x="185.81" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.sort (95 samples, 0.04%)</title><rect x="100.8" y="305" width="0.5" height="15.0" fill="rgb(248,121,53)" rx="2" ry="2" />
<text text-anchor="" x="103.76" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8.access$200 (2,225 samples, 1.05%)</title><rect x="1131.2" y="81" width="12.3" height="15.0" fill="rgb(241,70,36)" rx="2" ry="2" />
<text text-anchor="" x="1134.20" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeInt (55 samples, 0.03%)</title><rect x="583.2" y="241" width="0.3" height="15.0" fill="rgb(214,143,0)" rx="2" ry="2" />
<text text-anchor="" x="586.18" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.IndexDriver.batch_DualTagging (421 samples, 0.20%)</title><rect x="100.7" y="337" width="2.4" height="15.0" fill="rgb(217,225,12)" rx="2" ry="2" />
<text text-anchor="" x="103.74" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeHi (21 samples, 0.01%)</title><rect x="101.2" y="241" width="0.1" height="15.0" fill="rgb(233,139,26)" rx="2" ry="2" />
<text text-anchor="" x="104.17" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readLong (239 samples, 0.11%)</title><rect x="312.8" y="241" width="1.3" height="15.0" fill="rgb(212,141,22)" rx="2" ry="2" />
<text text-anchor="" x="315.78" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeAt (9,525 samples, 4.48%)</title><rect x="200.6" y="145" width="52.8" height="15.0" fill="rgb(211,181,17)" rx="2" ry="2" />
<text text-anchor="" x="203.62" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeAt (62 samples, 0.03%)</title><rect x="100.8" y="257" width="0.4" height="15.0" fill="rgb(216,179,14)" rx="2" ry="2" />
<text text-anchor="" x="103.82" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (116 samples, 0.05%)</title><rect x="165.4" y="209" width="0.7" height="15.0" fill="rgb(227,88,17)" rx="2" ry="2" />
<text text-anchor="" x="168.44" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (27 samples, 0.01%)</title><rect x="200.8" y="97" width="0.1" height="15.0" fill="rgb(226,107,32)" rx="2" ry="2" />
<text text-anchor="" x="203.80" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (1,757 samples, 0.83%)</title><rect x="295.5" y="177" width="9.8" height="15.0" fill="rgb(218,99,38)" rx="2" ry="2" />
<text text-anchor="" x="298.52" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (213 samples, 0.10%)</title><rect x="250.9" y="97" width="1.2" height="15.0" fill="rgb(228,160,22)" rx="2" ry="2" />
<text text-anchor="" x="253.87" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.matches (100 samples, 0.05%)</title><rect x="102.5" y="257" width="0.6" height="15.0" fill="rgb(245,14,42)" rx="2" ry="2" />
<text text-anchor="" x="105.51" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.sort (95 samples, 0.04%)</title><rect x="100.8" y="289" width="0.5" height="15.0" fill="rgb(244,41,51)" rx="2" ry="2" />
<text text-anchor="" x="103.76" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf (5,299 samples, 2.49%)</title><rect x="553.8" y="145" width="29.4" height="15.0" fill="rgb(244,209,47)" rx="2" ry="2" />
<text text-anchor="" x="556.79" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readString (128 samples, 0.06%)</title><rect x="103.4" y="209" width="0.7" height="15.0" fill="rgb(228,213,9)" rx="2" ry="2" />
<text text-anchor="" x="106.39" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.InputStreamReader.read (57,113 samples, 26.84%)</title><rect x="849.7" y="193" width="316.7" height="15.0" fill="rgb(234,69,8)" rx="2" ry="2" />
<text text-anchor="" x="852.71" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.InputStreamReader.read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sorting$4.call (21,456 samples, 10.08%)</title><rect x="269.5" y="257" width="119.0" height="15.0" fill="rgb(239,4,13)" rx="2" ry="2" />
<text text-anchor="" x="272.51" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.batch.S..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.sequence (33 samples, 0.02%)</title><rect x="102.9" y="129" width="0.2" height="15.0" fill="rgb(254,129,36)" rx="2" ry="2" />
<text text-anchor="" x="105.87" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.HeapByteBuffer.compact (36 samples, 0.02%)</title><rect x="1166.2" y="129" width="0.2" height="15.0" fill="rgb(226,149,7)" rx="2" ry="2" />
<text text-anchor="" x="1169.22" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.readBytes (3,506 samples, 1.65%)</title><rect x="1147.0" y="145" width="19.4" height="15.0" fill="rgb(240,143,22)" rx="2" ry="2" />
<text text-anchor="" x="1149.98" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,293 samples, 0.61%)</title><rect x="209.8" y="97" width="7.2" height="15.0" fill="rgb(224,18,18)" rx="2" ry="2" />
<text text-anchor="" x="212.81" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8.updatePositions (35 samples, 0.02%)</title><rect x="115.9" y="33" width="0.2" height="15.0" fill="rgb(240,145,44)" rx="2" ry="2" />
<text text-anchor="" x="118.86" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decode (762 samples, 0.36%)</title><rect x="175.4" y="193" width="4.2" height="15.0" fill="rgb(207,188,40)" rx="2" ry="2" />
<text text-anchor="" x="178.39" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.clazz (19 samples, 0.01%)</title><rect x="102.9" y="113" width="0.1" height="15.0" fill="rgb(247,113,19)" rx="2" ry="2" />
<text text-anchor="" x="105.89" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (195,986 samples, 92.10%)</title><rect x="103.1" y="321" width="1086.9" height="15.0" fill="rgb(230,59,27)" rx="2" ry="2" />
<text text-anchor="" x="106.14" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.FutureTask.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,293 samples, 0.61%)</title><rect x="209.8" y="113" width="7.2" height="15.0" fill="rgb(229,94,30)" rx="2" ry="2" />
<text text-anchor="" x="212.81" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (2,923 samples, 1.37%)</title><rect x="147.9" y="177" width="16.2" height="15.0" fill="rgb(240,172,47)" rx="2" ry="2" />
<text text-anchor="" x="150.89" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.expr (25 samples, 0.01%)</title><rect x="102.3" y="97" width="0.2" height="15.0" fill="rgb(239,129,35)" rx="2" ry="2" />
<text text-anchor="" x="105.35" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.ensureBounds (75 samples, 0.04%)</title><rect x="295.1" y="225" width="0.4" height="15.0" fill="rgb(242,153,41)" rx="2" ry="2" />
<text text-anchor="" x="298.11" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.sort (11,136 samples, 5.23%)</title><rect x="326.7" y="193" width="61.8" height="15.0" fill="rgb(212,140,37)" rx="2" ry="2" />
<text text-anchor="" x="329.74" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (947 samples, 0.45%)</title><rect x="166.1" y="193" width="5.3" height="15.0" fill="rgb(213,120,23)" rx="2" ry="2" />
<text text-anchor="" x="169.11" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList$Itr.hasNext (20 samples, 0.01%)</title><rect x="182.3" y="241" width="0.1" height="15.0" fill="rgb(206,137,22)" rx="2" ry="2" />
<text text-anchor="" x="185.32" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Encoder.encode (50 samples, 0.02%)</title><rect x="109.9" y="129" width="0.2" height="15.0" fill="rgb(239,73,0)" rx="2" ry="2" />
<text text-anchor="" x="112.86" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeLo (6,142 samples, 2.89%)</title><rect x="219.4" y="129" width="34.0" height="15.0" fill="rgb(228,58,4)" rx="2" ry="2" />
<text text-anchor="" x="222.38" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,289 samples, 0.61%)</title><rect x="209.8" y="81" width="7.2" height="15.0" fill="rgb(226,207,53)" rx="2" ry="2" />
<text text-anchor="" x="212.83" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.binarySort (2,980 samples, 1.40%)</title><rect x="182.8" y="161" width="16.5" height="15.0" fill="rgb(235,206,4)" rx="2" ry="2" />
<text text-anchor="" x="185.82" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (197 samples, 0.09%)</title><rect x="199.4" y="97" width="1.1" height="15.0" fill="rgb(241,51,11)" rx="2" ry="2" />
<text text-anchor="" x="202.39" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (75 samples, 0.04%)</title><rect x="295.1" y="209" width="0.4" height="15.0" fill="rgb(246,135,5)" rx="2" ry="2" />
<text text-anchor="" x="298.11" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.(init) (226 samples, 0.11%)</title><rect x="1166.4" y="209" width="1.3" height="15.0" fill="rgb(222,119,23)" rx="2" ry="2" />
<text text-anchor="" x="1169.42" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.readLine (67,342 samples, 31.65%)</title><rect x="794.3" y="225" width="373.4" height="15.0" fill="rgb(232,86,30)" rx="2" ry="2" />
<text text-anchor="" x="797.26" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.BufferedReader.readLine</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8.access$200 (35 samples, 0.02%)</title><rect x="115.9" y="49" width="0.2" height="15.0" fill="rgb(213,102,52)" rx="2" ry="2" />
<text text-anchor="" x="118.86" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.isAllDouble (128 samples, 0.06%)</title><rect x="101.8" y="305" width="0.7" height="15.0" fill="rgb(244,37,14)" rx="2" ry="2" />
<text text-anchor="" x="104.78" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeLo (42 samples, 0.02%)</title><rect x="100.9" y="241" width="0.3" height="15.0" fill="rgb(234,138,28)" rx="2" ry="2" />
<text text-anchor="" x="103.93" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.io.MyFileInputStream.available (617 samples, 0.29%)</title><rect x="1143.6" y="129" width="3.4" height="15.0" fill="rgb(251,139,5)" rx="2" ry="2" />
<text text-anchor="" x="1146.56" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.ensureBounds (87 samples, 0.04%)</title><rect x="145.2" y="225" width="0.5" height="15.0" fill="rgb(230,120,40)" rx="2" ry="2" />
<text text-anchor="" x="148.17" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedOutputStream.flushBuffer (78 samples, 0.04%)</title><rect x="110.3" y="177" width="0.4" height="15.0" fill="rgb(213,160,5)" rx="2" ry="2" />
<text text-anchor="" x="113.29" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (67 samples, 0.03%)</title><rect x="101.4" y="257" width="0.4" height="15.0" fill="rgb(225,7,44)" rx="2" ry="2" />
<text text-anchor="" x="104.39" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeHi (2,576 samples, 1.21%)</title><rect x="374.2" y="145" width="14.3" height="15.0" fill="rgb(208,35,26)" rx="2" ry="2" />
<text text-anchor="" x="377.21" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeInt (3,203 samples, 1.51%)</title><rect x="471.6" y="225" width="17.7" height="15.0" fill="rgb(234,97,10)" rx="2" ry="2" />
<text text-anchor="" x="474.57" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeForceCollapse (2,576 samples, 1.21%)</title><rect x="374.2" y="177" width="14.3" height="15.0" fill="rgb(236,115,33)" rx="2" ry="2" />
<text text-anchor="" x="377.21" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeCollapse (9,545 samples, 4.49%)</title><rect x="200.5" y="161" width="52.9" height="15.0" fill="rgb(235,78,12)" rx="2" ry="2" />
<text text-anchor="" x="203.51" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,358 samples, 0.64%)</title><rect x="191.8" y="145" width="7.5" height="15.0" fill="rgb(220,2,46)" rx="2" ry="2" />
<text text-anchor="" x="194.82" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.CharBuffer.(init) (111 samples, 0.05%)</title><rect x="849.7" y="113" width="0.6" height="15.0" fill="rgb(212,136,35)" rx="2" ry="2" />
<text text-anchor="" x="852.73" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.Buffer.position (36 samples, 0.02%)</title><rect x="1166.2" y="113" width="0.2" height="15.0" fill="rgb(226,177,38)" rx="2" ry="2" />
<text text-anchor="" x="1169.22" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (5,299 samples, 2.49%)</title><rect x="553.8" y="209" width="29.4" height="15.0" fill="rgb(211,187,35)" rx="2" ry="2" />
<text text-anchor="" x="556.79" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >av..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.readLine (67,705 samples, 31.82%)</title><rect x="792.2" y="241" width="375.5" height="15.0" fill="rgb(242,168,0)" rx="2" ry="2" />
<text text-anchor="" x="795.25" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.BufferedReader.readLine</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readInt (1,218 samples, 0.57%)</title><rect x="306.0" y="241" width="6.8" height="15.0" fill="rgb(207,48,41)" rx="2" ry="2" />
<text text-anchor="" x="309.03" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.matches (100 samples, 0.05%)</title><rect x="102.5" y="273" width="0.6" height="15.0" fill="rgb(214,90,47)" rx="2" ry="2" />
<text text-anchor="" x="105.51" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedOutputStream.write (10,719 samples, 5.04%)</title><rect x="732.7" y="241" width="59.5" height="15.0" fill="rgb(225,114,24)" rx="2" ry="2" />
<text text-anchor="" x="735.73" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.sort (15,639 samples, 7.35%)</title><rect x="182.8" y="225" width="86.7" height="15.0" fill="rgb(223,54,12)" rx="2" ry="2" />
<text text-anchor="" x="185.79" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeLo (3,721 samples, 1.75%)</title><rect x="353.6" y="145" width="20.6" height="15.0" fill="rgb(235,70,43)" rx="2" ry="2" />
<text text-anchor="" x="356.58" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Indexing.access$1 (1,385 samples, 0.65%)</title><rect x="103.2" y="241" width="7.6" height="15.0" fill="rgb(212,107,13)" rx="2" ry="2" />
<text text-anchor="" x="106.15" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (83 samples, 0.04%)</title><rect x="218.9" y="49" width="0.5" height="15.0" fill="rgb(241,145,37)" rx="2" ry="2" />
<text text-anchor="" x="221.92" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (118 samples, 0.06%)</title><rect x="252.8" y="65" width="0.6" height="15.0" fill="rgb(210,96,11)" rx="2" ry="2" />
<text text-anchor="" x="255.79" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.getNode (5,015 samples, 2.36%)</title><rect x="649.7" y="209" width="27.8" height="15.0" fill="rgb(219,29,3)" rx="2" ry="2" />
<text text-anchor="" x="652.72" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >j..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readString (1,479 samples, 0.70%)</title><rect x="171.4" y="241" width="8.2" height="15.0" fill="rgb(216,88,25)" rx="2" ry="2" />
<text text-anchor="" x="174.42" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (442 samples, 0.21%)</title><rect x="267.1" y="65" width="2.4" height="15.0" fill="rgb(209,42,24)" rx="2" ry="2" />
<text text-anchor="" x="270.06" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readInt (67 samples, 0.03%)</title><rect x="314.1" y="225" width="0.4" height="15.0" fill="rgb(252,207,1)" rx="2" ry="2" />
<text text-anchor="" x="317.13" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.index.BTreeNodeMakeTree2.(init) (385 samples, 0.18%)</title><rect x="104.2" y="209" width="2.1" height="15.0" fill="rgb(240,119,34)" rx="2" ry="2" />
<text text-anchor="" x="107.18" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryData.encodeInt (34 samples, 0.02%)</title><rect x="144.3" y="209" width="0.2" height="15.0" fill="rgb(245,21,29)" rx="2" ry="2" />
<text text-anchor="" x="147.27" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.ByteArrayOutputStream.write (5,299 samples, 2.49%)</title><rect x="553.8" y="193" width="29.4" height="15.0" fill="rgb(208,27,12)" rx="2" ry="2" />
<text text-anchor="" x="556.79" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (134 samples, 0.06%)</title><rect x="10.0" y="321" width="0.7" height="15.0" fill="rgb(238,151,14)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.matches (124 samples, 0.06%)</title><rect x="101.8" y="273" width="0.7" height="15.0" fill="rgb(210,217,41)" rx="2" ry="2" />
<text text-anchor="" x="104.80" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (15,993 samples, 7.52%)</title><rect x="11.9" y="305" width="88.7" height="15.0" fill="rgb(253,202,12)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.isDouble (124 samples, 0.06%)</title><rect x="101.8" y="289" width="0.7" height="15.0" fill="rgb(252,188,33)" rx="2" ry="2" />
<text text-anchor="" x="104.80" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.clazz (19 samples, 0.01%)</title><rect x="102.4" y="65" width="0.1" height="15.0" fill="rgb(245,181,15)" rx="2" ry="2" />
<text text-anchor="" x="105.36" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Indexing.indexingOffsetFile (1,385 samples, 0.65%)</title><rect x="103.2" y="225" width="7.6" height="15.0" fill="rgb(240,171,46)" rx="2" ry="2" />
<text text-anchor="" x="106.15" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.sequence (78 samples, 0.04%)</title><rect x="102.1" y="177" width="0.4" height="15.0" fill="rgb(218,117,29)" rx="2" ry="2" />
<text text-anchor="" x="105.05" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.substring (4,080 samples, 1.92%)</title><rect x="710.1" y="225" width="22.6" height="15.0" fill="rgb(208,146,9)" rx="2" ry="2" />
<text text-anchor="" x="713.10" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >j..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decodeLoop (862 samples, 0.41%)</title><rect x="111.3" y="97" width="4.8" height="15.0" fill="rgb(235,93,20)" rx="2" ry="2" />
<text text-anchor="" x="114.27" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.decode (1,469 samples, 0.69%)</title><rect x="171.5" y="209" width="8.1" height="15.0" fill="rgb(247,19,37)" rx="2" ry="2" />
<text text-anchor="" x="174.48" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (3,441 samples, 1.62%)</title><rect x="1147.1" y="113" width="19.1" height="15.0" fill="rgb(245,28,51)" rx="2" ry="2" />
<text text-anchor="" x="1150.11" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.getNode (446 samples, 0.21%)</title><rect x="179.7" y="209" width="2.5" height="15.0" fill="rgb(228,209,20)" rx="2" ry="2" />
<text text-anchor="" x="182.68" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.Executors$RunnableAdapter.call (15,993 samples, 7.52%)</title><rect x="11.9" y="289" width="88.7" height="15.0" fill="rgb(239,76,6)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging$2.call (15,993 samples, 7.52%)</title><rect x="11.9" y="257" width="88.7" height="15.0" fill="rgb(217,223,11)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.bat..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (214 samples, 0.10%)</title><rect x="10.7" y="321" width="1.2" height="15.0" fill="rgb(215,208,6)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.read (940 samples, 0.44%)</title><rect x="111.3" y="145" width="5.2" height="15.0" fill="rgb(211,0,0)" rx="2" ry="2" />
<text text-anchor="" x="114.26" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (442 samples, 0.21%)</title><rect x="267.1" y="49" width="2.4" height="15.0" fill="rgb(233,226,25)" rx="2" ry="2" />
<text text-anchor="" x="270.06" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (372 samples, 0.17%)</title><rect x="259.5" y="49" width="2.1" height="15.0" fill="rgb(248,153,51)" rx="2" ry="2" />
<text text-anchor="" x="262.55" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList$Itr.next (42 samples, 0.02%)</title><rect x="182.4" y="241" width="0.3" height="15.0" fill="rgb(251,215,30)" rx="2" ry="2" />
<text text-anchor="" x="185.43" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (1,756 samples, 0.83%)</title><rect x="295.5" y="161" width="9.8" height="15.0" fill="rgb(214,182,29)" rx="2" ry="2" />
<text text-anchor="" x="298.53" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (1,217 samples, 0.57%)</title><rect x="306.0" y="225" width="6.8" height="15.0" fill="rgb(229,193,11)" rx="2" ry="2" />
<text text-anchor="" x="309.04" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.KeysNumber.getNumber (285 samples, 0.13%)</title><rect x="648.1" y="241" width="1.6" height="15.0" fill="rgb(247,182,23)" rx="2" ry="2" />
<text text-anchor="" x="651.14" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.clazz (24 samples, 0.01%)</title><rect x="102.1" y="113" width="0.2" height="15.0" fill="rgb(207,195,12)" rx="2" ry="2" />
<text text-anchor="" x="105.15" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode (19 samples, 0.01%)</title><rect x="144.5" y="209" width="0.1" height="15.0" fill="rgb(229,196,3)" rx="2" ry="2" />
<text text-anchor="" x="147.49" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.ensureBounds (48 samples, 0.02%)</title><rect x="583.2" y="225" width="0.3" height="15.0" fill="rgb(210,83,38)" rx="2" ry="2" />
<text text-anchor="" x="586.22" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (129 samples, 0.06%)</title><rect x="252.7" y="97" width="0.7" height="15.0" fill="rgb(214,54,23)" rx="2" ry="2" />
<text text-anchor="" x="255.73" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.sort (11,157 samples, 5.24%)</title><rect x="326.6" y="225" width="61.9" height="15.0" fill="rgb(242,208,34)" rx="2" ry="2" />
<text text-anchor="" x="329.63" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.Buffer.(init) (111 samples, 0.05%)</title><rect x="849.7" y="97" width="0.6" height="15.0" fill="rgb(237,159,51)" rx="2" ry="2" />
<text text-anchor="" x="852.73" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (118 samples, 0.06%)</title><rect x="252.8" y="49" width="0.6" height="15.0" fill="rgb(219,81,19)" rx="2" ry="2" />
<text text-anchor="" x="255.79" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.index.BTreeNodeMakeTree2.add (495 samples, 0.23%)</title><rect x="106.3" y="209" width="2.8" height="15.0" fill="rgb(232,47,42)" rx="2" ry="2" />
<text text-anchor="" x="109.31" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (54 samples, 0.03%)</title><rect x="144.6" y="177" width="0.3" height="15.0" fill="rgb(252,125,44)" rx="2" ry="2" />
<text text-anchor="" x="147.59" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeHi (3,289 samples, 1.55%)</title><rect x="201.1" y="129" width="18.3" height="15.0" fill="rgb(230,167,40)" rx="2" ry="2" />
<text text-anchor="" x="204.14" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.matches (124 samples, 0.06%)</title><rect x="101.8" y="257" width="0.7" height="15.0" fill="rgb(214,48,48)" rx="2" ry="2" />
<text text-anchor="" x="104.80" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (10,711 samples, 5.03%)</title><rect x="732.8" y="209" width="59.4" height="15.0" fill="rgb(248,21,15)" rx="2" ry="2" />
<text text-anchor="" x="735.77" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (1,216 samples, 0.57%)</title><rect x="306.0" y="193" width="6.8" height="15.0" fill="rgb(222,53,7)" rx="2" ry="2" />
<text text-anchor="" x="309.04" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.expr (40 samples, 0.02%)</title><rect x="102.8" y="145" width="0.3" height="15.0" fill="rgb(212,163,19)" rx="2" ry="2" />
<text text-anchor="" x="105.84" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.CharBuffer.wrap (111 samples, 0.05%)</title><rect x="849.7" y="145" width="0.6" height="15.0" fill="rgb(209,158,38)" rx="2" ry="2" />
<text text-anchor="" x="852.73" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopRight (944 samples, 0.44%)</title><rect x="264.3" y="113" width="5.2" height="15.0" fill="rgb(218,82,2)" rx="2" ry="2" />
<text text-anchor="" x="267.28" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedOutputStream.flush (78 samples, 0.04%)</title><rect x="110.3" y="193" width="0.4" height="15.0" fill="rgb(238,33,14)" rx="2" ry="2" />
<text text-anchor="" x="113.29" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (112 samples, 0.05%)</title><rect x="250.9" y="65" width="0.6" height="15.0" fill="rgb(223,143,44)" rx="2" ry="2" />
<text text-anchor="" x="253.88" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.substring (195 samples, 0.09%)</title><rect x="1188.0" y="241" width="1.1" height="15.0" fill="rgb(232,208,28)" rx="2" ry="2" />
<text text-anchor="" x="1190.99" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (54 samples, 0.03%)</title><rect x="144.6" y="209" width="0.3" height="15.0" fill="rgb(253,168,15)" rx="2" ry="2" />
<text text-anchor="" x="147.59" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.split (27 samples, 0.01%)</title><rect x="116.5" y="225" width="0.1" height="15.0" fill="rgb(206,43,46)" rx="2" ry="2" />
<text text-anchor="" x="119.47" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.ByteArrayOutputStream.ensureCapacity (5,299 samples, 2.49%)</title><rect x="553.8" y="177" width="29.4" height="15.0" fill="rgb(208,197,27)" rx="2" ry="2" />
<text text-anchor="" x="556.79" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.access$100 (20 samples, 0.01%)</title><rect x="182.3" y="225" width="0.1" height="15.0" fill="rgb(226,203,24)" rx="2" ry="2" />
<text text-anchor="" x="185.32" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (3,435 samples, 1.61%)</title><rect x="1147.1" y="97" width="19.1" height="15.0" fill="rgb(231,45,54)" rx="2" ry="2" />
<text text-anchor="" x="1150.15" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (2,526 samples, 1.19%)</title><rect x="236.7" y="81" width="14.0" height="15.0" fill="rgb(245,133,4)" rx="2" ry="2" />
<text text-anchor="" x="239.73" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopLeft (37 samples, 0.02%)</title><rect x="200.7" y="129" width="0.2" height="15.0" fill="rgb(234,27,7)" rx="2" ry="2" />
<text text-anchor="" x="203.74" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (539 samples, 0.25%)</title><rect x="256.3" y="113" width="2.9" height="15.0" fill="rgb(250,181,52)" rx="2" ry="2" />
<text text-anchor="" x="259.26" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (195,983 samples, 92.10%)</title><rect x="103.1" y="289" width="1086.8" height="15.0" fill="rgb(213,56,8)" rx="2" ry="2" />
<text text-anchor="" x="106.14" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.FutureTask.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (25 samples, 0.01%)</title><rect x="289.2" y="225" width="0.2" height="15.0" fill="rgb(207,183,38)" rx="2" ry="2" />
<text text-anchor="" x="292.24" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.InputStreamReader.read (940 samples, 0.44%)</title><rect x="111.3" y="161" width="5.2" height="15.0" fill="rgb(227,116,12)" rx="2" ry="2" />
<text text-anchor="" x="114.26" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging.tagOrdinaryFiles_DualTag (90 samples, 0.04%)</title><rect x="101.3" y="321" width="0.5" height="15.0" fill="rgb(209,155,54)" rx="2" ry="2" />
<text text-anchor="" x="104.28" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,289 samples, 0.61%)</title><rect x="209.8" y="65" width="7.2" height="15.0" fill="rgb(215,69,32)" rx="2" ry="2" />
<text text-anchor="" x="212.83" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.KeysNumber.getKey (19 samples, 0.01%)</title><rect x="321.5" y="241" width="0.1" height="15.0" fill="rgb(241,141,14)" rx="2" ry="2" />
<text text-anchor="" x="324.50" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (198 samples, 0.09%)</title><rect x="199.4" y="145" width="1.1" height="15.0" fill="rgb(246,173,34)" rx="2" ry="2" />
<text text-anchor="" x="202.38" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.readBytes (69 samples, 0.03%)</title><rect x="116.1" y="113" width="0.4" height="15.0" fill="rgb(252,108,23)" rx="2" ry="2" />
<text text-anchor="" x="119.09" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (2,923 samples, 1.37%)</title><rect x="147.9" y="193" width="16.2" height="15.0" fill="rgb(243,176,49)" rx="2" ry="2" />
<text text-anchor="" x="150.89" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeFixed (2,966 samples, 1.39%)</title><rect x="147.7" y="225" width="16.4" height="15.0" fill="rgb(218,75,0)" rx="2" ry="2" />
<text text-anchor="" x="150.65" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryData.encodeInt (49 samples, 0.02%)</title><rect x="144.9" y="225" width="0.3" height="15.0" fill="rgb(231,212,39)" rx="2" ry="2" />
<text text-anchor="" x="147.90" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>137 (134 samples, 0.06%)</title><rect x="10.0" y="369" width="0.7" height="15.0" fill="rgb(244,206,27)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopLeft (230 samples, 0.11%)</title><rect x="217.0" y="113" width="1.3" height="15.0" fill="rgb(236,54,20)" rx="2" ry="2" />
<text text-anchor="" x="219.98" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (15,993 samples, 7.52%)</title><rect x="11.9" y="321" width="88.7" height="15.0" fill="rgb(214,102,3)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.charset.CharsetDecoder.decode (862 samples, 0.41%)</title><rect x="111.3" y="113" width="4.8" height="15.0" fill="rgb(224,148,3)" rx="2" ry="2" />
<text text-anchor="" x="114.27" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.index.BTreeNodeMakeTree2.writeOut (316 samples, 0.15%)</title><rect x="109.1" y="209" width="1.7" height="15.0" fill="rgb(242,180,53)" rx="2" ry="2" />
<text text-anchor="" x="112.06" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeHi (2,898 samples, 1.36%)</title><rect x="253.4" y="129" width="16.1" height="15.0" fill="rgb(228,158,48)" rx="2" ry="2" />
<text text-anchor="" x="256.44" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.xflow (2,225 samples, 1.05%)</title><rect x="1131.2" y="97" width="12.3" height="15.0" fill="rgb(232,0,0)" rx="2" ry="2" />
<text text-anchor="" x="1134.20" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (69 samples, 0.03%)</title><rect x="116.1" y="81" width="0.4" height="15.0" fill="rgb(251,218,18)" rx="2" ry="2" />
<text text-anchor="" x="119.09" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (78 samples, 0.04%)</title><rect x="110.3" y="161" width="0.4" height="15.0" fill="rgb(252,207,44)" rx="2" ry="2" />
<text text-anchor="" x="113.29" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,119 samples, 0.53%)</title><rect x="191.8" y="97" width="6.2" height="15.0" fill="rgb(254,168,29)" rx="2" ry="2" />
<text text-anchor="" x="194.82" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.Executors$RunnableAdapter.call (195,983 samples, 92.10%)</title><rect x="103.1" y="305" width="1086.8" height="15.0" fill="rgb(231,166,16)" rx="2" ry="2" />
<text text-anchor="" x="106.14" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.Executors$RunnableAdapter.call</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.get (826 samples, 0.39%)</title><rect x="321.6" y="225" width="4.6" height="15.0" fill="rgb(252,180,52)" rx="2" ry="2" />
<text text-anchor="" x="324.61" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.gallopLeft (21 samples, 0.01%)</title><rect x="339.0" y="145" width="0.1" height="15.0" fill="rgb(209,54,13)" rx="2" ry="2" />
<text text-anchor="" x="342.03" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.valueOf (490 samples, 0.23%)</title><rect x="106.3" y="193" width="2.7" height="15.0" fill="rgb(205,17,38)" rx="2" ry="2" />
<text text-anchor="" x="109.31" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.MyStringSpliter.split (9,936 samples, 4.67%)</title><rect x="677.6" y="241" width="55.1" height="15.0" fill="rgb(215,113,5)" rx="2" ry="2" />
<text text-anchor="" x="680.63" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoole..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopRight (204 samples, 0.10%)</title><rect x="218.3" y="113" width="1.1" height="15.0" fill="rgb(226,224,46)" rx="2" ry="2" />
<text text-anchor="" x="221.25" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging.getTag (11,635 samples, 5.47%)</title><rect x="583.6" y="225" width="64.5" height="15.0" fill="rgb(224,206,12)" rx="2" ry="2" />
<text text-anchor="" x="586.62" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.ensureBounds (2,966 samples, 1.39%)</title><rect x="147.7" y="209" width="16.4" height="15.0" fill="rgb(205,45,1)" rx="2" ry="2" />
<text text-anchor="" x="150.65" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readFixed (119 samples, 0.06%)</title><rect x="165.4" y="241" width="0.7" height="15.0" fill="rgb(231,161,45)" rx="2" ry="2" />
<text text-anchor="" x="168.42" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.Buffer.limit (111 samples, 0.05%)</title><rect x="849.7" y="81" width="0.6" height="15.0" fill="rgb(240,186,52)" rx="2" ry="2" />
<text text-anchor="" x="852.73" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.getNode (826 samples, 0.39%)</title><rect x="321.6" y="209" width="4.6" height="15.0" fill="rgb(233,37,13)" rx="2" ry="2" />
<text text-anchor="" x="324.61" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (949 samples, 0.45%)</title><rect x="166.1" y="225" width="5.3" height="15.0" fill="rgb(240,188,21)" rx="2" ry="2" />
<text text-anchor="" x="169.10" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.group0 (41 samples, 0.02%)</title><rect x="102.8" y="161" width="0.3" height="15.0" fill="rgb(233,177,9)" rx="2" ry="2" />
<text text-anchor="" x="105.83" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.decode (75 samples, 0.04%)</title><rect x="103.7" y="177" width="0.4" height="15.0" fill="rgb(217,168,45)" rx="2" ry="2" />
<text text-anchor="" x="106.68" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.fill (940 samples, 0.44%)</title><rect x="111.3" y="177" width="5.2" height="15.0" fill="rgb(227,45,37)" rx="2" ry="2" />
<text text-anchor="" x="114.26" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode (104 samples, 0.05%)</title><rect x="109.6" y="161" width="0.5" height="15.0" fill="rgb(230,167,13)" rx="2" ry="2" />
<text text-anchor="" x="112.56" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.get (256 samples, 0.12%)</title><rect x="648.3" y="225" width="1.4" height="15.0" fill="rgb(253,187,35)" rx="2" ry="2" />
<text text-anchor="" x="651.30" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,119 samples, 0.53%)</title><rect x="191.8" y="113" width="6.2" height="15.0" fill="rgb(212,74,18)" rx="2" ry="2" />
<text text-anchor="" x="194.82" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (82 samples, 0.04%)</title><rect x="145.2" y="209" width="0.5" height="15.0" fill="rgb(220,208,7)" rx="2" ry="2" />
<text text-anchor="" x="148.20" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.get (446 samples, 0.21%)</title><rect x="179.7" y="225" width="2.5" height="15.0" fill="rgb(215,36,46)" rx="2" ry="2" />
<text text-anchor="" x="182.68" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (113 samples, 0.05%)</title><rect x="165.5" y="193" width="0.6" height="15.0" fill="rgb(244,59,41)" rx="2" ry="2" />
<text text-anchor="" x="168.45" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.isEnd (227 samples, 0.11%)</title><rect x="164.2" y="241" width="1.2" height="15.0" fill="rgb(214,101,16)" rx="2" ry="2" />
<text text-anchor="" x="167.16" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeAt (2,898 samples, 1.36%)</title><rect x="253.4" y="145" width="16.1" height="15.0" fill="rgb(240,146,49)" rx="2" ry="2" />
<text text-anchor="" x="256.44" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (2,529 samples, 1.19%)</title><rect x="236.7" y="97" width="14.0" height="15.0" fill="rgb(241,69,3)" rx="2" ry="2" />
<text text-anchor="" x="239.72" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.skipString (101 samples, 0.05%)</title><rect x="320.9" y="241" width="0.6" height="15.0" fill="rgb(252,44,12)" rx="2" ry="2" />
<text text-anchor="" x="323.93" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>215 (214 samples, 0.10%)</title><rect x="10.7" y="369" width="1.2" height="15.0" fill="rgb(247,42,31)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (949 samples, 0.45%)</title><rect x="166.1" y="209" width="5.3" height="15.0" fill="rgb(226,50,1)" rx="2" ry="2" />
<text text-anchor="" x="169.10" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeForceCollapse (2,898 samples, 1.36%)</title><rect x="253.4" y="161" width="16.1" height="15.0" fill="rgb(231,184,8)" rx="2" ry="2" />
<text text-anchor="" x="256.44" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.get (138 samples, 0.06%)</title><rect x="1189.2" y="241" width="0.7" height="15.0" fill="rgb(251,92,17)" rx="2" ry="2" />
<text text-anchor="" x="1192.18" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes (11,605 samples, 5.45%)</title><rect x="489.3" y="225" width="64.4" height="15.0" fill="rgb(254,49,47)" rx="2" ry="2" />
<text text-anchor="" x="492.33" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.la..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.HeapCharBuffer.(init) (111 samples, 0.05%)</title><rect x="849.7" y="129" width="0.6" height="15.0" fill="rgb(217,90,20)" rx="2" ry="2" />
<text text-anchor="" x="852.73" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor.runWorker (195,996 samples, 92.11%)</title><rect x="103.1" y="337" width="1086.9" height="15.0" fill="rgb(238,208,8)" rx="2" ry="2" />
<text text-anchor="" x="106.10" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.ThreadPoolExecutor.runWorker</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.binarySort (2,046 samples, 0.96%)</title><rect x="326.8" y="177" width="11.3" height="15.0" fill="rgb(242,49,46)" rx="2" ry="2" />
<text text-anchor="" x="329.80" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging$2.call (15,993 samples, 7.52%)</title><rect x="11.9" y="241" width="88.7" height="15.0" fill="rgb(235,96,1)" rx="2" ry="2" />
<text text-anchor="" x="14.94" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.bat..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (134 samples, 0.06%)</title><rect x="10.0" y="337" width="0.7" height="15.0" fill="rgb(242,226,18)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (159 samples, 0.07%)</title><rect x="146.8" y="177" width="0.8" height="15.0" fill="rgb(215,87,23)" rx="2" ry="2" />
<text text-anchor="" x="149.77" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.ByteArrayOutputStream.size (217 samples, 0.10%)</title><rect x="1167.8" y="241" width="1.2" height="15.0" fill="rgb(224,73,36)" rx="2" ry="2" />
<text text-anchor="" x="1170.79" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.alibaba.middleware.race.OrderSystemImpl.main (446 samples, 0.21%)</title><rect x="100.6" y="369" width="2.5" height="15.0" fill="rgb(249,113,7)" rx="2" ry="2" />
<text text-anchor="" x="103.62" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (853 samples, 0.40%)</title><rect x="259.5" y="97" width="4.8" height="15.0" fill="rgb(244,63,53)" rx="2" ry="2" />
<text text-anchor="" x="262.55" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readInt (952 samples, 0.45%)</title><rect x="166.1" y="241" width="5.3" height="15.0" fill="rgb(241,101,41)" rx="2" ry="2" />
<text text-anchor="" x="169.08" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.isEnd (134 samples, 0.06%)</title><rect x="10.0" y="225" width="0.7" height="15.0" fill="rgb(249,173,8)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FilterOutputStream.close (67 samples, 0.03%)</title><rect x="101.4" y="305" width="0.4" height="15.0" fill="rgb(235,150,5)" rx="2" ry="2" />
<text text-anchor="" x="104.39" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.ByteBuffer.hasArray (275 samples, 0.13%)</title><rect x="850.5" y="113" width="1.5" height="15.0" fill="rgb(249,212,47)" rx="2" ry="2" />
<text text-anchor="" x="853.47" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryEncoder.writeString (25 samples, 0.01%)</title><rect x="144.5" y="241" width="0.1" height="15.0" fill="rgb(252,227,0)" rx="2" ry="2" />
<text text-anchor="" x="147.45" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (95 samples, 0.04%)</title><rect x="321.0" y="193" width="0.5" height="15.0" fill="rgb(251,148,15)" rx="2" ry="2" />
<text text-anchor="" x="323.95" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (212,789 samples, 100%)</title><rect x="10.0" y="385" width="1180.0" height="15.0" fill="rgb(221,146,27)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="395.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.run (195,996 samples, 92.11%)</title><rect x="103.1" y="369" width="1086.9" height="15.0" fill="rgb(225,54,2)" rx="2" ry="2" />
<text text-anchor="" x="106.10" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Thread.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (77 samples, 0.04%)</title><rect x="217.1" y="65" width="0.4" height="15.0" fill="rgb(236,131,46)" rx="2" ry="2" />
<text text-anchor="" x="220.09" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.compile (80 samples, 0.04%)</title><rect x="102.6" y="241" width="0.5" height="15.0" fill="rgb(210,109,48)" rx="2" ry="2" />
<text text-anchor="" x="105.61" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sorting$2.call (27,555 samples, 12.95%)</title><rect x="116.7" y="273" width="152.8" height="15.0" fill="rgb(242,36,20)" rx="2" ry="2" />
<text text-anchor="" x="119.71" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.batch.Sortin..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.write (82 samples, 0.04%)</title><rect x="145.2" y="177" width="0.5" height="15.0" fill="rgb(246,101,20)" rx="2" ry="2" />
<text text-anchor="" x="148.20" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (82 samples, 0.04%)</title><rect x="145.2" y="193" width="0.5" height="15.0" fill="rgb(243,119,24)" rx="2" ry="2" />
<text text-anchor="" x="148.20" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (198 samples, 0.09%)</title><rect x="199.4" y="129" width="1.1" height="15.0" fill="rgb(252,47,1)" rx="2" ry="2" />
<text text-anchor="" x="202.38" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeCollapse (6,365 samples, 2.99%)</title><rect x="338.9" y="177" width="35.3" height="15.0" fill="rgb(238,145,4)" rx="2" ry="2" />
<text text-anchor="" x="341.91" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.(init) (75 samples, 0.04%)</title><rect x="103.7" y="193" width="0.4" height="15.0" fill="rgb(215,102,2)" rx="2" ry="2" />
<text text-anchor="" x="106.68" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.mergeAt (21 samples, 0.01%)</title><rect x="101.2" y="257" width="0.1" height="15.0" fill="rgb(217,87,8)" rx="2" ry="2" />
<text text-anchor="" x="104.17" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.charset.CharsetDecoder.decode (52,871 samples, 24.85%)</title><rect x="850.3" y="145" width="293.2" height="15.0" fill="rgb(232,62,37)" rx="2" ry="2" />
<text text-anchor="" x="853.35" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.nio.charset.CharsetDecoder.decode</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sorting$2.call (27,555 samples, 12.95%)</title><rect x="116.7" y="257" width="152.8" height="15.0" fill="rgb(206,173,26)" rx="2" ry="2" />
<text text-anchor="" x="119.71" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.batch.Sortin..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (210 samples, 0.10%)</title><rect x="217.1" y="97" width="1.2" height="15.0" fill="rgb(233,41,47)" rx="2" ry="2" />
<text text-anchor="" x="220.09" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging$2.call (214 samples, 0.10%)</title><rect x="10.7" y="241" width="1.2" height="15.0" fill="rgb(211,0,11)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sampling$1.call (1,051 samples, 0.49%)</title><rect x="110.9" y="273" width="5.8" height="15.0" fill="rgb(240,11,21)" rx="2" ry="2" />
<text text-anchor="" x="113.88" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.(init) (1,159 samples, 0.54%)</title><rect x="314.5" y="225" width="6.4" height="15.0" fill="rgb(245,7,25)" rx="2" ry="2" />
<text text-anchor="" x="317.50" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.available (486 samples, 0.23%)</title><rect x="1144.3" y="113" width="2.7" height="15.0" fill="rgb(226,117,22)" rx="2" ry="2" />
<text text-anchor="" x="1147.28" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode (11,569 samples, 5.44%)</title><rect x="489.5" y="209" width="64.2" height="15.0" fill="rgb(245,81,22)" rx="2" ry="2" />
<text text-anchor="" x="492.53" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.la..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.writeIntWithReturn (138 samples, 0.06%)</title><rect x="144.9" y="241" width="0.8" height="15.0" fill="rgb(238,191,54)" rx="2" ry="2" />
<text text-anchor="" x="147.89" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.get (5,015 samples, 2.36%)</title><rect x="649.7" y="225" width="27.8" height="15.0" fill="rgb(216,0,3)" rx="2" ry="2" />
<text text-anchor="" x="652.72" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >j..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes (110 samples, 0.05%)</title><rect x="109.5" y="177" width="0.6" height="15.0" fill="rgb(233,202,16)" rx="2" ry="2" />
<text text-anchor="" x="112.52" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.ByteArrayOutputStream.grow (5,299 samples, 2.49%)</title><rect x="553.8" y="161" width="29.4" height="15.0" fill="rgb(233,108,37)" rx="2" ry="2" />
<text text-anchor="" x="556.79" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ja..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedOutputStream.flushBuffer (10,711 samples, 5.03%)</title><rect x="732.8" y="225" width="59.4" height="15.0" fill="rgb(214,222,33)" rx="2" ry="2" />
<text text-anchor="" x="735.77" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (539 samples, 0.25%)</title><rect x="256.3" y="65" width="2.9" height="15.0" fill="rgb(226,57,1)" rx="2" ry="2" />
<text text-anchor="" x="259.26" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.compile (106 samples, 0.05%)</title><rect x="101.9" y="209" width="0.6" height="15.0" fill="rgb(226,200,32)" rx="2" ry="2" />
<text text-anchor="" x="104.90" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.implRead (940 samples, 0.44%)</title><rect x="111.3" y="129" width="5.2" height="15.0" fill="rgb(220,85,20)" rx="2" ry="2" />
<text text-anchor="" x="114.26" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.flushBuffer (5,309 samples, 2.49%)</title><rect x="553.7" y="225" width="29.5" height="15.0" fill="rgb(209,66,17)" rx="2" ry="2" />
<text text-anchor="" x="556.73" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >av..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (197 samples, 0.09%)</title><rect x="199.4" y="113" width="1.1" height="15.0" fill="rgb(209,34,27)" rx="2" ry="2" />
<text text-anchor="" x="202.39" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ComparableTimSort.gallopRight (36 samples, 0.02%)</title><rect x="200.9" y="129" width="0.2" height="15.0" fill="rgb(228,62,20)" rx="2" ry="2" />
<text text-anchor="" x="203.94" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.(init) (1,469 samples, 0.69%)</title><rect x="171.5" y="225" width="8.1" height="15.0" fill="rgb(245,193,9)" rx="2" ry="2" />
<text text-anchor="" x="174.48" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder.ensureBounds (1,757 samples, 0.83%)</title><rect x="295.5" y="209" width="9.8" height="15.0" fill="rgb(205,136,40)" rx="2" ry="2" />
<text text-anchor="" x="298.52" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.split (26 samples, 0.01%)</title><rect x="116.5" y="209" width="0.1" height="15.0" fill="rgb(246,40,9)" rx="2" ry="2" />
<text text-anchor="" x="119.48" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (134 samples, 0.06%)</title><rect x="10.0" y="273" width="0.7" height="15.0" fill="rgb(214,39,4)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeHi (2,586 samples, 1.22%)</title><rect x="339.2" y="145" width="14.4" height="15.0" fill="rgb(253,115,15)" rx="2" ry="2" />
<text text-anchor="" x="342.24" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes (19 samples, 0.01%)</title><rect x="144.5" y="225" width="0.1" height="15.0" fill="rgb(250,226,38)" rx="2" ry="2" />
<text text-anchor="" x="147.49" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (67 samples, 0.03%)</title><rect x="314.1" y="209" width="0.4" height="15.0" fill="rgb(243,113,53)" rx="2" ry="2" />
<text text-anchor="" x="317.13" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.expr (51 samples, 0.02%)</title><rect x="102.8" y="193" width="0.3" height="15.0" fill="rgb(253,139,19)" rx="2" ry="2" />
<text text-anchor="" x="105.77" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.sort (15,638 samples, 7.35%)</title><rect x="182.8" y="209" width="86.7" height="15.0" fill="rgb(225,29,47)" rx="2" ry="2" />
<text text-anchor="" x="185.79" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.readBytes (49 samples, 0.02%)</title><rect x="103.4" y="145" width="0.3" height="15.0" fill="rgb(239,43,18)" rx="2" ry="2" />
<text text-anchor="" x="106.41" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.compareTo (239 samples, 0.11%)</title><rect x="198.0" y="113" width="1.3" height="15.0" fill="rgb(238,38,39)" rx="2" ry="2" />
<text text-anchor="" x="201.02" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.sort.TypeInference.(init) (232 samples, 0.11%)</title><rect x="101.8" y="321" width="1.3" height="15.0" fill="rgb(222,134,45)" rx="2" ry="2" />
<text text-anchor="" x="104.78" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (853 samples, 0.40%)</title><rect x="259.5" y="81" width="4.8" height="15.0" fill="rgb(252,225,2)" rx="2" ry="2" />
<text text-anchor="" x="262.55" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (214 samples, 0.10%)</title><rect x="10.7" y="273" width="1.2" height="15.0" fill="rgb(206,92,20)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sorting$4.call (21,456 samples, 10.08%)</title><rect x="269.5" y="273" width="119.0" height="15.0" fill="rgb(205,144,38)" rx="2" ry="2" />
<text text-anchor="" x="272.51" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.batch.S..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (52 samples, 0.02%)</title><rect x="103.4" y="161" width="0.3" height="15.0" fill="rgb(239,221,46)" rx="2" ry="2" />
<text text-anchor="" x="106.40" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (52 samples, 0.02%)</title><rect x="103.4" y="177" width="0.3" height="15.0" fill="rgb(216,132,27)" rx="2" ry="2" />
<text text-anchor="" x="106.40" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (77 samples, 0.04%)</title><rect x="217.1" y="49" width="0.4" height="15.0" fill="rgb(226,41,26)" rx="2" ry="2" />
<text text-anchor="" x="220.09" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decode (637 samples, 0.30%)</title><rect x="317.4" y="193" width="3.5" height="15.0" fill="rgb(217,61,42)" rx="2" ry="2" />
<text text-anchor="" x="320.38" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (78 samples, 0.04%)</title><rect x="110.3" y="145" width="0.4" height="15.0" fill="rgb(239,146,50)" rx="2" ry="2" />
<text text-anchor="" x="113.29" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (127 samples, 0.06%)</title><rect x="305.3" y="209" width="0.7" height="15.0" fill="rgb(246,66,40)" rx="2" ry="2" />
<text text-anchor="" x="308.33" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (10,691 samples, 5.02%)</title><rect x="732.9" y="193" width="59.3" height="15.0" fill="rgb(223,186,50)" rx="2" ry="2" />
<text text-anchor="" x="735.88" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (1,358 samples, 0.64%)</title><rect x="191.8" y="129" width="7.5" height="15.0" fill="rgb(247,98,30)" rx="2" ry="2" />
<text text-anchor="" x="194.82" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (82 samples, 0.04%)</title><rect x="145.2" y="161" width="0.5" height="15.0" fill="rgb(254,61,27)" rx="2" ry="2" />
<text text-anchor="" x="148.20" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (98 samples, 0.05%)</title><rect x="218.8" y="97" width="0.6" height="15.0" fill="rgb(226,150,22)" rx="2" ry="2" />
<text text-anchor="" x="221.84" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (2,922 samples, 1.37%)</title><rect x="147.9" y="145" width="16.2" height="15.0" fill="rgb(205,190,36)" rx="2" ry="2" />
<text text-anchor="" x="150.90" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileInputStream.read (1,217 samples, 0.57%)</title><rect x="306.0" y="209" width="6.8" height="15.0" fill="rgb(236,93,0)" rx="2" ry="2" />
<text text-anchor="" x="309.04" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.compareTo (100 samples, 0.05%)</title><rect x="251.5" y="65" width="0.6" height="15.0" fill="rgb(234,186,23)" rx="2" ry="2" />
<text text-anchor="" x="254.50" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (95 samples, 0.04%)</title><rect x="321.0" y="209" width="0.5" height="15.0" fill="rgb(240,59,52)" rx="2" ry="2" />
<text text-anchor="" x="323.95" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.compile (107 samples, 0.05%)</title><rect x="101.9" y="241" width="0.6" height="15.0" fill="rgb(228,37,11)" rx="2" ry="2" />
<text text-anchor="" x="104.89" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (159 samples, 0.07%)</title><rect x="146.8" y="193" width="0.8" height="15.0" fill="rgb(227,38,37)" rx="2" ry="2" />
<text text-anchor="" x="149.77" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BufferedBinaryEncoder$OutputStreamSink.innerWrite (75 samples, 0.04%)</title><rect x="295.1" y="193" width="0.4" height="15.0" fill="rgb(239,24,38)" rx="2" ry="2" />
<text text-anchor="" x="298.11" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.ensureBounds (127 samples, 0.06%)</title><rect x="305.3" y="225" width="0.7" height="15.0" fill="rgb(223,131,22)" rx="2" ry="2" />
<text text-anchor="" x="308.33" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedOutputStream.flush (67 samples, 0.03%)</title><rect x="101.4" y="289" width="0.4" height="15.0" fill="rgb(212,121,51)" rx="2" ry="2" />
<text text-anchor="" x="104.39" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging.getTags (95 samples, 0.04%)</title><rect x="100.8" y="321" width="0.5" height="15.0" fill="rgb(234,50,34)" rx="2" ry="2" />
<text text-anchor="" x="103.76" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Sorting$4.call (134 samples, 0.06%)</title><rect x="10.0" y="257" width="0.7" height="15.0" fill="rgb(226,105,51)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryEncoder.writeIndex (38 samples, 0.02%)</title><rect x="144.2" y="241" width="0.3" height="15.0" fill="rgb(210,48,38)" rx="2" ry="2" />
<text text-anchor="" x="147.24" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.parseDouble (3,340 samples, 1.57%)</title><rect x="1169.0" y="241" width="18.5" height="15.0" fill="rgb(244,144,12)" rx="2" ry="2" />
<text text-anchor="" x="1171.99" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (226 samples, 0.11%)</title><rect x="1166.4" y="193" width="1.3" height="15.0" fill="rgb(213,126,38)" rx="2" ry="2" />
<text text-anchor="" x="1169.42" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.FutureTask.run (214 samples, 0.10%)</title><rect x="10.7" y="305" width="1.2" height="15.0" fill="rgb(215,201,13)" rx="2" ry="2" />
<text text-anchor="" x="13.75" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ThreadPoolExecutor$Worker.run (195,996 samples, 92.11%)</title><rect x="103.1" y="353" width="1086.9" height="15.0" fill="rgb(221,154,12)" rx="2" ry="2" />
<text text-anchor="" x="106.10" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.concurrent.ThreadPoolExecutor$Worker.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (2,526 samples, 1.19%)</title><rect x="236.7" y="65" width="14.0" height="15.0" fill="rgb(208,157,9)" rx="2" ry="2" />
<text text-anchor="" x="239.73" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.read (57,113 samples, 26.84%)</title><rect x="849.7" y="177" width="316.7" height="15.0" fill="rgb(211,185,7)" rx="2" ry="2" />
<text text-anchor="" x="852.71" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.cs.StreamDecoder.read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.(init) (107 samples, 0.05%)</title><rect x="101.9" y="225" width="0.6" height="15.0" fill="rgb(220,24,11)" rx="2" ry="2" />
<text text-anchor="" x="104.89" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.hash (31 samples, 0.01%)</title><rect x="1189.8" y="225" width="0.1" height="15.0" fill="rgb(229,100,8)" rx="2" ry="2" />
<text text-anchor="" x="1192.77" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.FileOutputStream.writeBytes (25 samples, 0.01%)</title><rect x="289.2" y="177" width="0.2" height="15.0" fill="rgb(241,53,47)" rx="2" ry="2" />
<text text-anchor="" x="292.24" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.MyDecoder.readFixed (127 samples, 0.06%)</title><rect x="305.3" y="241" width="0.7" height="15.0" fill="rgb(219,216,53)" rx="2" ry="2" />
<text text-anchor="" x="308.33" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.util.Pair.compareTo (539 samples, 0.25%)</title><rect x="256.3" y="97" width="2.9" height="15.0" fill="rgb(210,155,50)" rx="2" ry="2" />
<text text-anchor="" x="259.26" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hoolee.batch.Tagging$2.call (144,525 samples, 67.92%)</title><rect x="388.5" y="273" width="801.4" height="15.0" fill="rgb(241,76,33)" rx="2" ry="2" />
<text text-anchor="" x="391.50" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >hoolee.batch.Tagging$2.call</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>avro.io.BinaryEncoder.writeString (14,831 samples, 6.97%)</title><rect x="471.4" y="241" width="82.3" height="15.0" fill="rgb(242,112,25)" rx="2" ry="2" />
<text text-anchor="" x="474.44" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >avro.io.B..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.sort (11,136 samples, 5.23%)</title><rect x="326.7" y="209" width="61.8" height="15.0" fill="rgb(224,170,3)" rx="2" ry="2" />
<text text-anchor="" x="329.74" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.u..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimSort.mergeAt (2,576 samples, 1.21%)</title><rect x="374.2" y="161" width="14.3" height="15.0" fill="rgb(209,7,7)" rx="2" ry="2" />
<text text-anchor="" x="377.21" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.sort (15,638 samples, 7.35%)</title><rect x="182.8" y="193" width="86.7" height="15.0" fill="rgb(248,207,20)" rx="2" ry="2" />
<text text-anchor="" x="185.79" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
</svg>
